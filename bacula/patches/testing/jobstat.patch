Index: src/dird/ua_update.c
===================================================================
--- src/dird/ua_update.c	(révision 7144)
+++ src/dird/ua_update.c	(copie de travail)
@@ -42,6 +42,7 @@
 static int update_volume(UAContext *ua);
 static bool update_pool(UAContext *ua);
 static bool update_job(UAContext *ua);
+static bool update_stats(UAContext *ua);
 
 /*
  * Update a Pool Record in the database.
@@ -53,6 +54,8 @@
  *         changes pool info for volume
  *    update slots [scan=...]
  *         updates autochanger slots
+ *    update stats [days=...]
+ *         updates long term statistics
  */
 int update_cmd(UAContext *ua, const char *cmd)
 {
@@ -62,6 +65,7 @@
       NT_("pool"),   /* 2 */
       NT_("slots"),  /* 3 */
       NT_("jobid"),  /* 4 */
+      NT_("stats"),  /* 5 */
       NULL};
 
    if (!open_client_db(ua)) {
@@ -82,6 +86,9 @@
    case 4:
       update_job(ua);
       return 1;
+   case 5:
+      update_stats(ua);
+      return 1;
    default:
       break;
    }
@@ -90,6 +97,7 @@
    add_prompt(ua, _("Volume parameters"));
    add_prompt(ua, _("Pool from resource"));
    add_prompt(ua, _("Slots from autochanger"));
+   add_prompt(ua, _("Long term statistics"));
    switch (do_prompt(ua, _("item"), _("Choose catalog item to update"), NULL, 0)) {
    case 0:
       update_volume(ua);
@@ -100,6 +108,9 @@
    case 2:
       update_slots(ua);
       break;
+   case 3:
+      update_stats(ua);
+      break;
    default:
       break;
    }
@@ -789,6 +800,24 @@
 }
 
 /*
+ * Update long term statistics
+ */
+static bool update_stats(UAContext *ua)
+{
+   int i = find_arg_with_value(ua, NT_("days"));
+   utime_t since=0;
+
+   if (i >= 0) {
+      since = atoi(ua->argv[i]) * 24*60*60;
+   }
+
+   int nb = db_update_stats(ua->jcr, ua->db, since);
+   ua->info_msg(_("Updating %i job(s).\n"), nb);
+
+   return true;
+}
+
+/*
  * Update pool record -- pull info from current POOL resource
  */
 static bool update_pool(UAContext *ua)
Index: src/cats/sql_update.c
===================================================================
--- src/cats/sql_update.c	(révision 7144)
+++ src/cats/sql_update.c	(copie de travail)
@@ -126,6 +126,28 @@
 }
 
 /*
+ * Update Long term statistics with all jobs that were run before
+ * age seconds
+ */
+int
+db_update_stats(JCR *jcr, B_DB *mdb, time_t age)
+{
+   char ed1[30];
+   utime_t now = (utime_t)time(NULL);
+   edit_uint64(now - age, ed1);
+
+   Mmsg(mdb->cmd,
+        "INSERT INTO JobStat " 
+         "SELECT * " 
+          "FROM Job "
+         "WHERE JobStatus IN ('T', 'f', 'A', 'E') "
+           "AND JobId NOT IN (SELECT JobId FROM JobStat) "
+           "AND JobTDate < %s ", ed1);
+   QUERY_DB(jcr, mdb, mdb->cmd); /* TODO: get a message ? */
+   return sql_affected_rows(mdb);
+}
+
+/*
  * Given an incoming integer, set the string buffer to either NULL or the value
  *
  */
@@ -134,7 +156,6 @@
    bsnprintf(s, n, id ? "%s" : "NULL", edit_int64(id, ed1));
 }
 
-
 /*
  * Update the Job record at end of Job
  *
@@ -292,7 +313,6 @@
 {
    int stat;
    char ed1[50];
-
    db_lock(mdb);
    Mmsg(mdb->cmd, "UPDATE Storage SET AutoChanger=%d WHERE StorageId=%s", 
       sr->AutoChanger, edit_int64(sr->StorageId, ed1));
Index: src/cats/protos.h
===================================================================
--- src/cats/protos.h	(révision 7144)
+++ src/cats/protos.h	(copie de travail)
@@ -134,5 +134,6 @@
 int  db_add_digest_to_file_record(JCR *jcr, B_DB *mdb, FileId_t FileId, char *digest, int type);
 int  db_mark_file_record(JCR *jcr, B_DB *mdb, FileId_t FileId, JobId_t JobId);
 void db_make_inchanger_unique(JCR *jcr, B_DB *mdb, MEDIA_DBR *mr);
+int db_update_stats(JCR *jcr, B_DB *mdb, time_t age);
 
 #endif /* __SQL_PROTOS_H */
