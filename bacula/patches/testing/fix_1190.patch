Index: match_bsr.c
===================================================================
--- match_bsr.c	(revision 8116)
+++ match_bsr.c	(working copy)
@@ -607,14 +607,7 @@
 
 static int match_volblock(BSR *bsr, BSR_VOLBLOCK *volblock, DEV_RECORD *rec, bool done)
 {
-   /*
-    * Currently block matching does not work correctly for disk
-    * files in all cases, so it is "turned off" by the following 
-    * return statement.
-    */
-   return 1;
 
-
    if (!volblock) {
       return 1;                       /* no specification matches all */
    }
@@ -622,9 +615,12 @@
    if (rec->state & REC_ISTAPE) {
       return 1;                       /* All File records OK for this match */
    }
-//  Dmsg3(dbglevel, "match_volblock: sblock=%u eblock=%u recblock=%u\n",
-//             volblock->sblock, volblock->eblock, rec->Block);
-   if (volblock->sblock <= rec->Block && volblock->eblock >= rec->Block) {
+   Dmsg3(dbglevel, "match_volblock: sblock=%u eblock=%u recblock=%u\n",
+         volblock->sblock, volblock->eblock, rec->Block);
+
+   /* FIXME: find why we need to use sblock - 1 */
+   uint32_t min = (volblock->sblock)?volblock->sblock-1:0;     /* we don't test with -1 */
+   if (min <= rec->Block && volblock->eblock >= rec->Block) {
       return 1;
    }
    /* Once we get past last eblock, we are done */
Index: bscan.c
===================================================================
--- bscan.c	(revision 8146)
+++ bscan.c	(working copy)
@@ -420,9 +420,9 @@
    }
 
    if (list_records) {
-      Pmsg5(000, _("Record: SessId=%u SessTim=%u FileIndex=%d Stream=%d len=%u\n"),
+      Pmsg6(000, _("Record: SessId=%u SessTim=%u FileIndex=%d Stream=%d len=%u block=%u\n"),
             rec->VolSessionId, rec->VolSessionTime, rec->FileIndex,
-            rec->Stream, rec->data_len);
+            rec->Stream, rec->data_len, rec->Block);
    }
    /*
     * Check for Start or End of Session Record
