
          Release Notes for Bacula 1.38.1

  Bacula code: Total files = 420 Total lines = 138,440 (*.h *.c *.in)
  20,440 additional lines of code since version 1.36.3

Changes since 1.38.0:
- Fix several problems with PostgreSQL scripts.   
- Critical: allow restore of the first file of non-portable Win32 backup.
- Important: with muliple concurrent jobs the autochanger could get
  confused because of a missing mutex.
- Fix accessing last slot in label and update slots.       
- Modify configure.in to add execute option to sqlite3 catalog  
  scripts.
- Create update_xxx_table_8_to_9 scripts for updatedb
- Move the -lcrypt for PostgreSQL after the PostgreSQL libs in
  autoconf/bacula-macros/db.m4 as suggested by user.  Fixes bug #457.
- Remove @STATIC_CONS@ from tray-monitor Makefile as suggested
  by user. Fixes bug #456.


Major Changes in 1.38:
- Fixed out of order Volumes in restore.
- Improved algorithm for reserving drives in multiple drive
  autochangers. Autochange users MUST use the new Autochanger
  resource in the Storage daemon.
- There is a new database format that is not compatible
  with previous databases. You must upgrade if converting
  from 1.36.x. No changes from version 1.37.30.
- The Director, Storage daemon, and File daemons are
  Deamons are not compatible with prior versions. 
  All FDs must be upgraded at the same time.
- Support for ANSI/IBM labels.
- Faster database inserts due to combining the MD5/SHA1 into
  the attributes record, eliminating one INSERT/file backed up.
- Python Event support has been added. See below for
  configuration and details. The implementation is somewhat minimal,
  so the functionality is not complete. The Python interface
  has not been extensively tested, so please consider it BETA.
- DVD writing support, using parts, and some new directives in
  the Device resource of the Storage configuration file thanks
  to Nicolas Boichat. Please note that this code is still 
  BETA and should be carefully tested before using in
  production.
- Seven new options keywords in a FileSet resource:
  ignorecase, fstype, hfsplussupport, wilddir, wildfile, regexdir,
  and regexfile thanks to Pruben Guldberg). See below for details.
- Restore of all files for a Job or set of jobs even if the file
  records have been removed from the catalog.
- Restore of a directory (non-recursive, i.e. only one level).
- Support for TLS (ssl) between all the daemon connections thanks
  to Landon Fuller.                         
- Any Volume in the Pool named Scratch may be reassigned to any
  other Pool when a new Volume is needed.
- You may clone a Job and thus write (almost) the same data
  to multiple Volumes simultaneously (see below). Actually, 
  any Job may start any other Job with this mechanism, so it
  also be used to group jobs.
- Unicode filename support for Win32 (thanks to Thorsten Engel)
- Volume Shadow Copy support for Win32 thus the capability to
  backup exclusively opened files (thanks to Thorsten Engel).
  A VSS enabled Win32 FD is available.  You must explicitly
  turn on VSS with "Enable VSS = yes" in your FileSet resource.
- New manual format with an index (thanks to Karl Cunningham).
- New Web site format (thanks to Michael Scherer).
- SQLite3 support.
- Web-bacula, previously a separate project by Juan Luis Frances,
  is now included in the Bacula GUI release. This is a management
  level tool for reporting the state of Bacula jobs.
- The code is now Internationalized so that it can be localized
  in native languages.  Thanks to Nicolas Boichat.

New Directives:
- New Job directive "Prefer Mounted Volumes = yes|no" causes the
  SD to select either an Autochanger or a drive with a valid 
  Volume already mounted in preference. If none is available,
  it will select the first available drive.
- New Run directive in Job resource of DIR. It permits
  cloning of jobs.  To clone a copy of the current job, use
     Run = "job-name level=%l since=\"%s\""
  Note, job-name is normally the same name as the job that
  is running but there is no restriction on what you put. If you
  want to start the job by hand and use job overrides such as       
  storage=xxx, realize that the job will be started with the
  default storage values not the overrides.  The level=%l guarantees
  that the chosen level of the job is the same, and the since=... 
  ensures that the job uses *exactly* the same time/date for incremental
  and differential jobs. The since=... is ignored when level=Full.
  A cloned job will not start additional clones, so it is not possible
  to recurse.
- New Options keywords in a FileSet directive (backported to 1.36.3):
  - WildDir xxx
    Will do a wild card match against directories (files will not
    be matched).
  - WildFile xxx
    Will do a wild card match against files (directories will not
    be matched).
  - RegexDir xxx
    Will do a regular expression match against directories (files
    will not be matched).
  - RegexFile xxx
    Will do a regular expression match against files( directories
    will not be matched).
  - IgnoreCase = yes | no
    Will ignore case in wild card and regular expression matches.
    This is handy for Windows where filename case is not significant.
  - FsType = string
    where string is a filesystem type: ext2, jfs, ntfs, proc,
    reiserfs, xfs, usbdevfs, sysfs, smbfs, iso9660.  For ext3
    systems, use ext2.  You may have multiple fstype directives
    and thus permit multiple filesystem types.  If the type
    specified on the fstype directive does not match the
    filesystem for a particular directive, that directory will
    not be backed up.  This directive can be used to prevent
    backing up non-local filesystems.
  - HFS Plus Support = yes | no 
    If set, Mac OS X resource forks will be saved and restored.
- Label Type = ANSI | IBM | Bacula   
  Implemented in Director Pool resource and in SD Device resource.
  If it is specified in the SD Device resource, it will take
  precedence over the value passed from the Director to the SD.
- Check Labels = yes | no
  Implemented in the SD Device resource. If you intend to read
  ANSI or IBM labels, this *must* be set. Even if the volume
  is not ANSI labeled, you can set this to yes, and Bacula will
  check the label type.
- Scripts Directory = <directory> name.  Defines the directory from 
  which Bacula scripts will be called for events. In fact, Bacula
  appends this name to the standard Python list of search directories,
  so the script could also be in any of the Python system directories.
- In FileSet, you can exclude backing up of hardlinks (if you have
  a lot, it can be very expensive), by using:
    HardLinks = no
  in the Options section. Patch supplied by David R Bosso. Thanks.
- MaximumPartSize = bytes (SD, Device resource)
  Defines the maximum part size.
- Requires Mount = Yes/No (SD, Device resource)
  Defines if the device require to be mounted to be read, and if it
  must be written in a special way. If it set, the following directives 
  must be defined in the same Device resource:
  + Mount Point = directory
    Directory where the device must be mounted. 
  + Mount Command = name-string
    Command that must be executed to mount the device. Before the command
    is executed, %a is replaced with the Archive Device, and %m with the 
    Mount Point.
  + Unmount Command = name-string
    Command that must be executed to unmount the device. Before the 
    command is executed, %a is replaced with the Archive Device, and 
    %m with the Mount Point.
  + Write Part Command = name-string
    Command that must be executed to write a part to the device. Before
    the command is executed, %a is replaced with the Archive Device, %m 
    with the Mount Point, %n with the current part number (0-based), 
    and %v with the current part filename.
  + Free Space Command = name-string
    Command that must be executed to check how much free space is left 
    on the device. Before the command is executed, %a is replaced with 
    the Archive Device, %m with the Mount Point, %n with the current part
    number (0-based), and %v with the current part filename.
- Write Part After Job = Yes/No (DIR, Job Resource, and Schedule Resource)
  If this directive is set to yes (default no), a new part file will be
  created after the job is finished.
- A pile of new Directives to support TLS. Please see the TLS chapter
  of the manual.

New Commands:
- "python restart" restarts the Python interpreter. Rather brutal, make
   sure no Python scripts are running. This permits you to change
   a Python script and get Bacula to use the new script.

New configure options:
- --with-libintl-prefix for defining alternate locations for
  the NLS internationalization libraries. Not normally required.
- --datadir  for defining where the language files will be installed
  required only if you do not want the default /usr/share.

Items to note!!!
- If you use an Autochanger, you MUST update your SD conf file
  to use the new Autochanger resource.  Otherwise, certain commands
  such as "update slots" may not work.
- You must add --with-python=[DIR] to the configure command line
  if you want Python support.  Python 2.2, 2.3 and 2.4 should be 
  automatically detected if in the standard place.
- When linking with --with-python, there are a few warnings that
  can be ignored.
- You must either create a new catalog database or upgrade your
  old database. After installation, run from your scripts
  directory:

       ./upgrade_bacula_tables

  You can also find this script in the <bacula-source>/src/cats
  directory.
- The Director, Storage daemon, and File daemons are
  Deamons are not compatible with  prior versions. 
  All FDs must be upgraded at the same time.
- You must add --with-openssl to the configure command line if
  you want TLS communications encryption support.
- Disk seeking during restores does not yet work correctly in
  all cases, so it is turned off.
- Note, with gcc (GCC) 4.0.1 20050727 (Red Hat 4.0.1-5) on an
  AMD64 CPU running 64 bit CentOS4, there is a compiler bug that
  generates bad code that causes Bacula to segment fault.
  Typically you will see this in the Storage daemon first.  The
  solution is to compile Bacula ensuring that no optimization is
  turned on (normally it is -O2).
  This same compiler bug has been reported and confirmed with
  gcc (GCC) 4.0.2 20050901 (prerelease) (SUSE Linux) running on
  an AMD64 CPU.  This for the moment, I would recommend that all
  users of GCC 4.0.1 or greater turn off all optimization when
  compiling.


Other Items:
- Security fixes for temp files created in mtx-changer, during
  ./configure, and during making of Rescue disk.
- A new script, dvd-handler, in the scripts directory,
  which is designed to be used as parameters to Write Part Command and
  Free Space Command. They need the dvd+rw-tools to be installed
  (http://fy.chalmers.se/~appro/linux/DVD+RW/) AND, the growisofs
  program must be patched using the 
  <bacula-source>/patches/dvd+rw-tools-5.21.4.10.8.bacula.patch
  You must have Python installed to run the scripts.
- Part files support: File volumes can now be split into multiple
  files, called "parts".
- For the details of the Python scripting support, please see the new
  Python Scripting chapter in the manual.
