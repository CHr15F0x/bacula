# Makefile for Tokyo Cabinet



#================================================================
# Setting Variables
#================================================================


# Generic settings
SHELL = @SHELL@

# Package information
PACKAGE = @PACKAGE_NAME@
VERSION = @PACKAGE_VERSION@
PACKAGEDIR = $(PACKAGE)-$(VERSION)
PACKAGETGZ = $(PACKAGE)-$(VERSION).tar.gz
LIBVER = @MYLIBVER@
LIBREV = @MYLIBREV@
FORMATVER = @MYFORMATVER@

# Targets
HEADERFILES = @MYHEADERFILES@
LIBRARYFILES = @MYLIBRARYFILES@
LIBOBJFILES = @MYLIBOBJFILES@
COMMANDFILES = @MYCOMMANDFILES@
MAN1FILES = @MYMAN1FILES@
MAN3FILES = @MYMAN3FILES@
DOCUMENTFILES = @MYDOCUMENTFILES@
PCFILES = @MYPCFILES@

# Install destinations
prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
INCLUDEDIR = @includedir@
LIBDIR = @libdir@
BINDIR = @bindir@
LIBEXECDIR = @libexecdir@
DATADIR = @datadir@/$(PACKAGE)
MAN1DIR = @mandir@/man1
MAN3DIR = @mandir@/man3
PCDIR = @libdir@/pkgconfig
DESTDIR =

# Building configuration
CC = @CC@
CPPFLAGS = @MYCPPFLAGS@ \
  -D_TC_PREFIX="\"$(prefix)\"" -D_TC_INCLUDEDIR="\"$(INCLUDEDIR)\"" \
  -D_TC_LIBDIR="\"$(LIBDIR)\"" -D_TC_BINDIR="\"$(BINDIR)\"" -D_TC_LIBEXECDIR="\"$(LIBEXECDIR)\"" \
  -D_TC_APPINC="\"-I$(INCLUDEDIR)\"" -D_TC_APPLIBS="\"-L$(LIBDIR) -ltokyocabinet @LIBS@\""
CFLAGS = @MYCFLAGS@
LDFLAGS = @MYLDFLAGS@
LIBS = @LIBS@
LDENV = LD_RUN_PATH=/lib:/usr/lib:$(LIBDIR):$(HOME)/lib:/usr/local/lib:@MYRUNPATH@:.
RUNENV = @MYLDLIBPATHENV@=.:/lib:/usr/lib:$(LIBDIR):$(HOME)/lib:/usr/local/lib:@MYRUNPATH@
POSTCMD = @MYPOSTCMD@
NO_ECHO = @


#================================================================
# Suffix rules
#================================================================


.SUFFIXES :
.SUFFIXES : .c .o

.c.o :
	@echo "Compiling $<"
	$(NO_ECHO)$(CC) -c $(CPPFLAGS) $(CFLAGS) $<



#================================================================
# Actions
#================================================================

all:  $(LIBRARYFILES)

not-all : $(LIBRARYFILES) $(COMMANDFILES)
	@$(POSTCMD)
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Ready to install.\n'
	@printf '#================================================================\n'


clean :
	rm -rf $(LIBRARYFILES) $(LIBOBJFILES) $(COMMANDFILES) \
	  *.o a.out check.in check.out gmon.out leak.log casket casket-* casket.* *~ hoge moge


version :
	vernum=`expr $(LIBVER)00 + $(LIBREV)` ; \
	  sed -e 's/_TC_VERSION.*/_TC_VERSION    "$(VERSION)"/' \
	    -e "s/_TC_LIBVER.*/_TC_LIBVER     $$vernum/" \
	    -e 's/_TC_FORMATVER.*/_TC_FORMATVER  "$(FORMATVER)"/' tcutil.h > tcutil.h~
	[ -f tcutil.h~ ] && mv -f tcutil.h~ tcutil.h

untabify :
	ls *.c *.h *.idl | while read name ; \
	  do \
	    sed -e 's/\t/        /g' -e 's/ *$$//' $$name > $$name~; \
	    [ -f $$name~ ] && mv -f $$name~ $$name ; \
	  done

install:

install-strip:

uninstall:

do-notinstall :
	mkdir -p $(DESTDIR)$(INCLUDEDIR)
	cp -Rf $(HEADERFILES) $(DESTDIR)$(INCLUDEDIR)
	mkdir -p $(DESTDIR)$(LIBDIR)
	cp -Rf $(LIBRARYFILES) $(DESTDIR)$(LIBDIR)
	mkdir -p $(DESTDIR)$(BINDIR)
	cp -Rf $(COMMANDFILES) $(DESTDIR)$(BINDIR)
	mkdir -p $(DESTDIR)$(DATADIR)
	cp -Rf $(DOCUMENTFILES) $(DESTDIR)$(DATADIR)
	mkdir -p $(DESTDIR)$(MAN1DIR)
	cd man && cp -Rf $(MAN1FILES) $(DESTDIR)$(MAN1DIR)
	mkdir -p $(DESTDIR)$(MAN3DIR)
	cd man && cp -Rf $(MAN3FILES) $(DESTDIR)$(MAN3DIR)
	mkdir -p $(DESTDIR)$(PCDIR)
	cp -Rf $(PCFILES) $(DESTDIR)$(PCDIR)
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Thanks for using Tokyo Cabinet.\n'
	@printf '#================================================================\n'


do-notinstall-strip :
	make DESTDIR=$(DESTDIR) install
	cd $(DESTDIR)$(BINDIR) && strip $(MYCOMMANDS)


do-notuninstall :
	cd $(DESTDIR)$(INCLUDEDIR) && rm -f $(HEADERFILES)
	cd $(DESTDIR)$(LIBDIR) && rm -f $(LIBRARYFILES)
	cd $(DESTDIR)$(BINDIR) && rm -f $(COMMANDFILES)
	cd $(DESTDIR)$(MAN1DIR) && rm -f $(MAN1FILES)
	cd $(DESTDIR)$(MAN3DIR) && rm -f $(MAN3FILES)
	rm -rf $(DESTDIR)$(DATADIR)
	cd $(DESTDIR)$(PCDIR) && rm -f $(PCFILES)


dist :
	make version
	make untabify
	make distclean
	cd .. && tar cvf - $(PACKAGEDIR) | gzip -c > $(PACKAGETGZ)
	sync ; sync


distclean : clean
	rm -rf Makefile tokyocabinet.pc config.cache config.log config.status autom4te.cache


check :
	rm -rf casket*
	$(RUNENV) $(RUNCMD) ./tcamgr version
	$(RUNENV) $(RUNCMD) ./tcutest xstr 50000
	$(RUNENV) $(RUNCMD) ./tcutest list 50000
	$(RUNENV) $(RUNCMD) ./tcutest map 50000
	$(RUNENV) $(RUNCMD) ./tcutest mdb 50000
	$(RUNENV) $(RUNCMD) ./tcutest misc 500
	$(RUNENV) $(RUNCMD) ./tcutest wicked 50000
	$(RUNENV) $(RUNCMD) ./tcumttest combo 5 50000 500
	$(RUNENV) $(RUNCMD) ./tcumttest combo -rnd 5 50000 500
	$(RUNENV) $(RUNCMD) ./tchmttest typical casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tchmttest typical -rr 1000 casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tchmttest typical -rc 50000 -nc casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tcucodec url Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec url -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec base Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec base -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec quote Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec quote -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec mime Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec mime -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec pack -bwt Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec pack -d -bwt check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec tcbs Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec tcbs -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec zlib Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec zlib -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec xml Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec xml -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec ucs Makefile > check.in
	$(RUNENV) $(RUNCMD) ./tcucodec ucs -d check.in > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec date -ds '1978-02-11T18:05:30+09:00' -rf > check.out
	$(RUNENV) $(RUNCMD) ./tcucodec conf
	$(RUNENV) $(RUNCMD) ./tchtest write casket 50000 5000 5 5
	$(RUNENV) $(RUNCMD) ./tchtest read casket
	$(RUNENV) $(RUNCMD) ./tchtest remove casket
	$(RUNENV) $(RUNCMD) ./tchtest write -mt -tl -td -rc 50 casket 50000 5000 5 5
	$(RUNENV) $(RUNCMD) ./tchtest read -mt -nb -rc 50 casket
	$(RUNENV) $(RUNCMD) ./tchtest remove -mt -rc 50 casket
	$(RUNENV) $(RUNCMD) ./tchtest write -as -tb -rc 50 casket 50000 50000 5 5
	$(RUNENV) $(RUNCMD) ./tchtest read -nl -rc 50 casket
	$(RUNENV) $(RUNCMD) ./tchtest remove -rc 50 casket
	$(RUNENV) $(RUNCMD) ./tchtest rcat -pn 500 casket 50000 5000 5 5
	$(RUNENV) $(RUNCMD) ./tchtest rcat -tl -td -pn 5000 casket 50000 500 5 15
	$(RUNENV) $(RUNCMD) ./tchtest rcat -nl -pn 500 -rl casket 5000 500 5 5
	$(RUNENV) $(RUNCMD) ./tchtest rcat -tb -pn 500 casket 5000 500 5 5
	$(RUNENV) $(RUNCMD) ./tchmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr list -pv -fm 1 -px casket > check.out
	$(RUNENV) $(RUNCMD) ./tchtest misc casket 5000
	$(RUNENV) $(RUNCMD) ./tchtest misc -tl -td casket 5000
	$(RUNENV) $(RUNCMD) ./tchtest misc -mt -tb casket 500
	$(RUNENV) $(RUNCMD) ./tchtest wicked casket 50000
	$(RUNENV) $(RUNCMD) ./tchtest wicked -tl -td casket 50000
	$(RUNENV) $(RUNCMD) ./tchtest wicked -mt -tb casket 5000
	$(RUNENV) $(RUNCMD) ./tchmttest write -tl casket 5 5000 500 5
	$(RUNENV) $(RUNCMD) ./tchmttest read casket 5
	$(RUNENV) $(RUNCMD) ./tchmttest read -rnd casket 5
	$(RUNENV) $(RUNCMD) ./tchmttest remove casket 5
	$(RUNENV) $(RUNCMD) ./tchmttest wicked -nc casket 5 5000
	$(RUNENV) $(RUNCMD) ./tchmttest wicked -tl -td casket 5 5000
	$(RUNENV) $(RUNCMD) ./tchmttest wicked -tb casket 5 5000
	$(RUNENV) $(RUNCMD) ./tchmttest typical casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tchmttest typical -rr 1000 casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tchmttest typical -tl -rc 50000 -nc casket 5 50000 5000
	$(RUNENV) $(RUNCMD) ./tchmgr create casket 3 1 1
	$(RUNENV) $(RUNCMD) ./tchmgr inform casket
	$(RUNENV) $(RUNCMD) ./tchmgr put casket one first
	$(RUNENV) $(RUNCMD) ./tchmgr put casket two second
	$(RUNENV) $(RUNCMD) ./tchmgr put -dk casket three third
	$(RUNENV) $(RUNCMD) ./tchmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tchmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tchmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tchmgr put casket four fourth
	$(RUNENV) $(RUNCMD) ./tchmgr put -dk casket five fifth
	$(RUNENV) $(RUNCMD) ./tchmgr out casket one
	$(RUNENV) $(RUNCMD) ./tchmgr out casket two
	$(RUNENV) $(RUNCMD) ./tchmgr get casket three > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr get casket four > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr get casket five > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr optimize casket
	$(RUNENV) $(RUNCMD) ./tchmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tchmgr get casket three > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr get casket four > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr get casket five > check.out
	$(RUNENV) $(RUNCMD) ./tchmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbtest write casket 50000 5 5 5000 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove casket
	$(RUNENV) $(RUNCMD) ./tcbmgr list -rb 00001000 00002000 casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr list -fm 000001 casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbtest write -mt -tl -td -ls 1024 casket 50000 5000 5000 5000 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read -mt -nb casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove -mt casket
	$(RUNENV) $(RUNCMD) ./tcbtest write -tb casket 50000 5 5 50000 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read -nl casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove casket
	$(RUNENV) $(RUNCMD) ./tcbtest rcat -lc 5 -nc 5 -pn 500 casket 50000 5 5 5000 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest rcat -tl -td -pn 5000 casket 50000 5 5 500 5 15
	$(RUNENV) $(RUNCMD) ./tcbtest rcat -nl -pn 5000 -rl casket 15000 5 5 500 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest rcat -ca 1000 -tb -pn 5000 casket 15000 5 5 500 5 5
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbtest queue casket 15000 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest misc casket 5000
	$(RUNENV) $(RUNCMD) ./tcbtest misc -tl -td casket 5000
	$(RUNENV) $(RUNCMD) ./tcbtest misc -mt -tb casket 500
	$(RUNENV) $(RUNCMD) ./tcbtest wicked casket 50000
	$(RUNENV) $(RUNCMD) ./tcbtest wicked -tl -td casket 50000
	$(RUNENV) $(RUNCMD) ./tcbtest wicked -mt -tb casket 5000
	$(RUNENV) $(RUNCMD) ./tcbtest write -cd -lc 5 -nc 5 casket 5000 5 5 5 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read -cd -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove -cd -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbtest write -ci -td -lc 5 -nc 5 casket 5000 5 5 5 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read -ci -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove -ci -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbtest write -cj -tb -lc 5 -nc 5 casket 5000 5 5 5 5 5
	$(RUNENV) $(RUNCMD) ./tcbtest read -cj -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbtest remove -cj -lc 5 -nc 5 casket
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbmttest write -tl casket 5 5000 5 5 500 5
	$(RUNENV) $(RUNCMD) ./tcbmttest read casket 5
	$(RUNENV) $(RUNCMD) ./tcbmttest read -rnd casket 5
	$(RUNENV) $(RUNCMD) ./tcbmttest remove casket 5
	$(RUNENV) $(RUNCMD) ./tcbmttest wicked -nc casket 5 5000
	$(RUNENV) $(RUNCMD) ./tcbmttest wicked -tl -td casket 5 5000
	$(RUNENV) $(RUNCMD) ./tchmttest wicked -tb casket 5 5000
	$(RUNENV) $(RUNCMD) ./tcbmttest typical casket 5 50000 5 5
	$(RUNENV) $(RUNCMD) ./tcbmttest typical -rr 1000 casket 5 50000 5 5
	$(RUNENV) $(RUNCMD) ./tcbmttest typical -tl -nc casket 5 50000 5 5
	$(RUNENV) $(RUNCMD) ./tcbmgr create casket 4 4 3 1 1
	$(RUNENV) $(RUNCMD) ./tcbmgr inform casket
	$(RUNENV) $(RUNCMD) ./tcbmgr put casket one first
	$(RUNENV) $(RUNCMD) ./tcbmgr put casket two second
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dk casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dd casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dd casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr put casket four fourth
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dk casket five fifth
	$(RUNENV) $(RUNCMD) ./tcbmgr out casket one
	$(RUNENV) $(RUNCMD) ./tcbmgr out casket two
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket three > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket four > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket five > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr list -j three -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr optimize casket
	$(RUNENV) $(RUNCMD) ./tcbmgr put -dc casket three third
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket three > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket four > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr get casket five > check.out
	$(RUNENV) $(RUNCMD) ./tcbmgr list -pv casket > check.out
	$(RUNENV) $(RUNCMD) ./tcatest write 'casket.tch#mode=wct#bnum=5000' 50000
	$(RUNENV) $(RUNCMD) ./tcatest read 'casket.tch#mode=r'
	$(RUNENV) $(RUNCMD) ./tcatest remove 'casket.tch#mode=w'
	$(RUNENV) $(RUNCMD) ./tcatest misc 'casket.tch#mode=wct#bnum=500#opts=ld' 5000
	$(RUNENV) $(RUNCMD) ./tcatest wicked 'casket.tch#mode=wct' 5000
	$(RUNENV) $(RUNCMD) ./tcatest write 'casket.tcb#mode=wct#lmemb=5#nmemb=5' 50000
	$(RUNENV) $(RUNCMD) ./tcatest read 'casket.tcb#mode=r'
	$(RUNENV) $(RUNCMD) ./tcatest remove 'casket.tcb#mode=w'
	$(RUNENV) $(RUNCMD) ./tcatest misc 'casket.tcb#mode=wct#lmemb=5#nmemb=5#opts=ld' 5000
	$(RUNENV) $(RUNCMD) ./tcatest wicked 'casket.tcb#mode=wct' 5000
	$(RUNENV) $(RUNCMD) ./tcatest write '*#bnum=5000#cap=100' 50000
	$(RUNENV) $(RUNCMD) ./tcatest misc '*' 5000
	$(RUNENV) $(RUNCMD) ./tcatest wicked '*' 5000
	$(RUNENV) $(RUNCMD) ./tcamgr create 'casket.tch#mode=wct#bnum=3'
	$(RUNENV) $(RUNCMD) ./tcamgr inform 'casket.tch'
	$(RUNENV) $(RUNCMD) ./tcamgr put casket.tch one first
	$(RUNENV) $(RUNCMD) ./tcamgr put casket.tch two second
	$(RUNENV) $(RUNCMD) ./tcamgr put -dk casket.tch three third
	$(RUNENV) $(RUNCMD) ./tcamgr put -dc casket.tch three third
	$(RUNENV) $(RUNCMD) ./tcamgr put -dc casket.tch three third
	$(RUNENV) $(RUNCMD) ./tcamgr put -dc casket.tch three third
	$(RUNENV) $(RUNCMD) ./tcamgr put casket.tch four fourth
	$(RUNENV) $(RUNCMD) ./tcamgr put -dk casket.tch five fifth
	$(RUNENV) $(RUNCMD) ./tcamgr out casket.tch one
	$(RUNENV) $(RUNCMD) ./tcamgr out casket.tch two
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch three > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch four > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch five > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr list -pv -fm f casket.tch > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr put -dc casket.tch three third
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch three > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch four > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr get casket.tch five > check.out
	$(RUNENV) $(RUNCMD) ./tcamgr list -pv casket.tch > check.out
	rm -rf casket*
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Checking completed.\n'
	@printf '#================================================================\n'


check-valgrind :
	make RUNCMD="valgrind --tool=memcheck --log-fd=1" check | tee leak.log
	grep ERROR leak.log
	grep 'at exit' leak.log


check-large :
	rm -rf casket*
	$(RUNENV) $(RUNCMD) ./tchmttest typical casket 3 1000000 5000000 13 8
	$(RUNENV) $(RUNCMD) ./tchmttest typical -nc casket 3 1000000 5000000 13 8
	$(RUNENV) $(RUNCMD) ./tcbmttest typical casket 3 500000 8 8 500000 16 8
	$(RUNENV) $(RUNCMD) ./tcbmttest typical -nc casket 3 500000 8 8 500000 16 8
	rm -rf casket*


check-thread :
	rm -rf casket*
	$(RUNENV) $(RUNCMD) ./tcumttest typical 5 500000 500000
	$(RUNENV) $(RUNCMD) ./tcumttest typical -nc -rr 1000 5 500000 500000
	$(RUNENV) $(RUNCMD) ./tchmttest typical casket 5 500000 500000
	$(RUNENV) $(RUNCMD) ./tchmttest typical -rc 500000 -nc -rr 1000 casket 5 500000 500000
	$(RUNENV) $(RUNCMD) ./tcbmttest typical casket 5 100000 5 5
	$(RUNENV) $(RUNCMD) ./tcbmttest typical -nc -rr 1000 casket 5 100000 5 5
	rm -rf casket*


check-forever :
	while true ; \
	  do \
	    make check || break ; \
	    make check || break ; \
	    make check || break ; \
	    make check || break ; \
	    make check || break ; \
	    make check-thread || break ; \
	  done


dicthdb :
	rm -f casket
	sed -e 's/.*$$/&\t&/' /usr/share/dict/words | \
	  ./tchmgr importtsv -sc casket


dictbdb :
	rm -f casket
	sed -e 's/.*$$/&\t&/' /usr/share/dict/words | \
	  ./tcbmgr importtsv -sc casket


.PHONY : all clean install check



#================================================================
# Building binaries
#================================================================


libtokyocabinet.a : $(LIBOBJFILES)
	$(AR) $(ARFLAGS) $@ $(LIBOBJFILES)


libtokyocabinet.so.$(LIBVER).$(LIBREV).0 : $(LIBOBJFILES)
	$(CC) -shared -Wl,-soname,libtokyocabinet.so.$(LIBVER) -o $@ $(LIBOBJFILES) \
	  $(LDFLAGS) $(LIBS)


libtokyocabinet.so.$(LIBVER) : libtokyocabinet.so.$(LIBVER).$(LIBREV).0
	ln -f -s libtokyocabinet.so.$(LIBVER).$(LIBREV).0 $@


libtokyocabinet.so : libtokyocabinet.so.$(LIBVER).$(LIBREV).0
	ln -f -s libtokyocabinet.so.$(LIBVER).$(LIBREV).0 $@


libtokyocabinet.$(LIBVER).$(LIBREV).0.dylib : $(LIBOBJFILES)
	$(CC) -dynamiclib -o $@ \
	  -install_name $(LIBDIR)/libtokyocabinet.$(LIBVER).dylib \
	  -current_version $(LIBVER).$(LIBREV).0 -compatibility_version $(LIBVER) \
	  $(LIBOBJFILES) $(LDFLAGS) $(LIBS)


libtokyocabinet.$(LIBVER).dylib : libtokyocabinet.$(LIBVER).$(LIBREV).0.dylib
	ln -f -s libtokyocabinet.$(LIBVER).$(LIBREV).0.dylib $@


libtokyocabinet.dylib : libtokyocabinet.$(LIBVER).$(LIBREV).0.dylib
	ln -f -s libtokyocabinet.$(LIBVER).$(LIBREV).0.dylib $@


tcutest : tcutest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcumttest : tcumttest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcucodec : tcucodec.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tchtest : tchtest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tchmttest : tchmttest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tchmgr : tchmgr.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcbtest : tcbtest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcbmttest : tcbmttest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcbmgr : tcbmgr.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcatest : tcatest.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


tcamgr : tcamgr.o $(LIBRARYFILES)
	$(LDENV) $(CC) $(CFLAGS) -o $@ $< $(LDFLAGS) -ltokyocabinet $(LIBS)


myconf.o : myconf.h

tcutil.o : tcutil.h myconf.h

tchdb.o : tchdb.h tcutil.h myconf.h

tcbdb.o : tcbdb.h tchdb.h tcutil.h myconf.h

tcutest.o tcucodec.o : tcutil.h myconf.h

tchtest.o tchmttest.o tchmgr.o : tcutil.h tchdb.h myconf.h

tcbtest.o tcbmttest.o tcbmgr.o : tcutil.h tchdb.h tcbdb.h myconf.h

tcatest.o : tcutil.h tchdb.h tcbdb.h tcadb.h myconf.h



# END OF FILE
