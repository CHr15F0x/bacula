#############################################################################
# Makefile for building: bat
# Generated by qmake (2.01a) (Qt 4.2.1) on: Sun Feb 4 16:56:30 2007
# Project:  bat.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile bat.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include -I. -Iconsole -Irestore -I.. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L../lib -lbac -lssl -lcrypto -lQtGui -L/usr/lib -L/usr/X11R6/lib -lpng -lSM -lICE -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		bat_conf.cpp \
		mainwin.cpp \
		qstd.cpp \
		console/authenticate.cpp \
		console/console.cpp \
		restore/brestore.cpp moc_mainwin.cpp \
		moc_console.cpp \
		moc_restore.cpp \
		qrc_main.cpp
OBJECTS       = main.o \
		bat_conf.o \
		mainwin.o \
		qstd.o \
		authenticate.o \
		console.o \
		brestore.o \
		moc_mainwin.o \
		moc_console.o \
		moc_restore.o \
		qrc_main.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		bat.pro
QMAKE_TARGET  = bat
DESTDIR       = 
TARGET        = bat

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_main.h ui_label.h ui_console.h ui_brestore.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: bat.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile bat.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile bat.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/bat1.0.0 || $(MKDIR) .tmp/bat1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/bat1.0.0/ && $(COPY_FILE) --parents mainwin.h bat.h bat_conf.h qstd.h console/console.h restore/restore.h .tmp/bat1.0.0/ && $(COPY_FILE) --parents main.qrc .tmp/bat1.0.0/ && $(COPY_FILE) --parents main.cpp bat_conf.cpp mainwin.cpp qstd.cpp console/authenticate.cpp console/console.cpp restore/brestore.cpp .tmp/bat1.0.0/ && $(COPY_FILE) --parents main.ui label.ui console/console.ui restore/brestore.ui .tmp/bat1.0.0/ && (cd `dirname .tmp/bat1.0.0` && $(TAR) bat1.0.0.tar bat1.0.0 && $(COMPRESS) bat1.0.0.tar) && $(MOVE) `dirname .tmp/bat1.0.0`/bat1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/bat1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwin.cpp moc_console.cpp moc_restore.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwin.cpp moc_console.cpp moc_restore.cpp
moc_mainwin.cpp: ui_main.h \
		mainwin.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwin.h -o moc_mainwin.cpp

moc_console.cpp: ui_console.h \
		console/console.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) console/console.h -o moc_console.cpp

moc_restore.cpp: ui_brestore.h \
		restore/restore.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) restore/restore.h -o moc_restore.cpp

compiler_rcc_make_all: qrc_main.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_main.cpp
qrc_main.cpp: main.qrc \
		/usr/bin/rcc \
		images/new.png \
		images/disconnected.png \
		images/label.png \
		images/server.png \
		images/restore.png \
		images/copy.png \
		images/cut.png \
		images/connected.png \
		images/big-server.png \
		images/save.png \
		images/bat.png \
		images/paste.png \
		images/run.png \
		images/open.png
	/usr/bin/rcc -name main main.qrc -o qrc_main.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_main.h ui_label.h ui_console.h ui_brestore.h
compiler_uic_clean:
	-$(DEL_FILE) ui_main.h ui_label.h ui_console.h ui_brestore.h
ui_main.h: main.ui
	/usr/bin/uic main.ui -o ui_main.h

ui_label.h: label.ui
	/usr/bin/uic label.ui -o ui_label.h

ui_console.h: console/console.ui
	/usr/bin/uic console/console.ui -o ui_console.h

ui_brestore.h: restore/brestore.ui
	/usr/bin/uic restore/brestore.ui -o ui_brestore.h

compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

main.o: main.cpp bat.h \
		mainwin.h \
		ui_main.h \
		bat_conf.h \
		qstd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

bat_conf.o: bat_conf.cpp bat_conf.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bat_conf.o bat_conf.cpp

mainwin.o: mainwin.cpp bat.h \
		mainwin.h \
		ui_main.h \
		bat_conf.h \
		qstd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwin.o mainwin.cpp

qstd.o: qstd.cpp qstd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qstd.o qstd.cpp

authenticate.o: console/authenticate.cpp bat.h \
		mainwin.h \
		ui_main.h \
		bat_conf.h \
		qstd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o authenticate.o console/authenticate.cpp

console.o: console/console.cpp bat.h \
		mainwin.h \
		ui_main.h \
		bat_conf.h \
		qstd.h \
		console/console.h \
		ui_console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o console.o console/console.cpp

brestore.o: restore/brestore.cpp bat.h \
		mainwin.h \
		ui_main.h \
		bat_conf.h \
		qstd.h \
		restore/restore.h \
		ui_brestore.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o brestore.o restore/brestore.cpp

moc_mainwin.o: moc_mainwin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwin.o moc_mainwin.cpp

moc_console.o: moc_console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_console.o moc_console.cpp

moc_restore.o: moc_restore.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_restore.o moc_restore.cpp

qrc_main.o: qrc_main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_main.o qrc_main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

