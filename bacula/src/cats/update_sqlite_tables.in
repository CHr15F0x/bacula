#!/bin/sh
#
# shell script to update SQLite from version 1.32 to 1.33
#
echo " "
echo "Depending on the size of your database,"
echo "this script may take several minutes to run."
echo " "

bindir=@SQL_BINDIR@
cd @working_dir@

$bindir/sqlite $* bacula.db <<END-OF-DATA

BEGIN TRANSACTION;
CREATE TEMPORARY TABLE Media_backup (
   MediaId INTEGER UNSIGNED AUTOINCREMENT,
   VolumeName VARCHAR(128) NOT NULL,
   Slot INTEGER DEFAULT 0,
   PoolId INTEGER UNSIGNED REFERENCES Pool NOT NULL,
   MediaType VARCHAR(128) NOT NULL,
   FirstWritten DATETIME DEFAULT 0,
   LastWritten DATETIME DEFAULT 0,
   LabelDate DATETIME DEFAULT 0,
   VolJobs INTEGER UNSIGNED DEFAULT 0,
   VolFiles INTEGER UNSIGNED DEFAULT 0,
   VolBlocks INTEGER UNSIGNED DEFAULT 0,
   VolMounts INTEGER UNSIGNED DEFAULT 0,
   VolBytes BIGINT UNSIGNED DEFAULT 0,
   VolErrors INTEGER UNSIGNED DEFAULT 0,
   VolWrites INTEGER UNSIGNED DEFAULT 0,
   VolCapacityBytes BIGINT UNSIGNED DEFAULT 0,
   VolStatus VARCHAR(20) NOT NULL,
   Recycle TINYINT DEFAULT 0,
   VolRetention BIGINT UNSIGNED DEFAULT 0,
   VolUseDuration BIGINT UNSIGNED DEFAULT 0,
   MaxVolJobs INTEGER UNSIGNED DEFAULT 0,
   MaxVolFiles INTEGER UNSIGNED DEFAULT 0,
   MaxVolBytes BIGINT UNSIGNED DEFAULT 0,
   Drive INTEGER DEFAULT 0,
   InChanger TINYINT DEFAULT 0,
   PRIMARY KEY(MediaId)
   );

INSERT INTO Media_backup SELECT 
   MediaId, VolumeName, Slot, PoolId,
   MediaType, FirstWritten, LastWritten,
   LabelDate, VolJobs, VolFiles, VolBlocks,
   VolMounts, VolBytes, VolErrors, VolWrites,
   VolCapacityBytes, VolStatus, Recycle,
   VolRetention, VolUseDuration, MaxVolJobs,
   MaxVolFiles, MaxVolBytes
   FROM Media;


DROP TABLE Media;

CREATE TABLE Media (
   MediaId INTEGER UNSIGNED AUTOINCREMENT,
   VolumeName VARCHAR(128) NOT NULL,
   Slot INTEGER DEFAULT 0,
   PoolId INTEGER UNSIGNED REFERENCES Pool NOT NULL,
   MediaType VARCHAR(128) NOT NULL,
   FirstWritten DATETIME DEFAULT 0,
   LastWritten DATETIME DEFAULT 0,
   LabelDate DATETIME DEFAULT 0,
   VolJobs INTEGER UNSIGNED DEFAULT 0,
   VolFiles INTEGER UNSIGNED DEFAULT 0,
   VolBlocks INTEGER UNSIGNED DEFAULT 0,
   VolMounts INTEGER UNSIGNED DEFAULT 0,
   VolBytes BIGINT UNSIGNED DEFAULT 0,
   VolErrors INTEGER UNSIGNED DEFAULT 0,
   VolWrites INTEGER UNSIGNED DEFAULT 0,
   VolCapacityBytes BIGINT UNSIGNED DEFAULT 0,
   VolStatus VARCHAR(20) NOT NULL,
   Recycle TINYINT DEFAULT 0,
   VolRetention BIGINT UNSIGNED DEFAULT 0,
   VolUseDuration BIGINT UNSIGNED DEFAULT 0,
   MaxVolJobs INTEGER UNSIGNED DEFAULT 0,
   MaxVolFiles INTEGER UNSIGNED DEFAULT 0,
   MaxVolBytes BIGINT UNSIGNED DEFAULT 0,
   Drive INTEGER DEFAULT 0,
   InChanger TINYINT DEFAULT 0,
   PRIMARY KEY(MediaId)
   );

INSERT INTO Media (
   MediaId, VolumeName, Slot, PoolId,
   MediaType, FirstWritten, LastWritten,
   LabelDate, VolJobs, VolFiles, VolBlocks,
   VolMounts, VolBytes, VolErrors, VolWrites,
   VolCapacityBytes, VolStatus, Recycle,
   VolRetention, VolUseDuration, MaxVolJobs,
   MaxVolFiles, MaxVolBytes)
   SELECT * FROM Media_backup;

DROP TABLE Media_backup;

CREATE INDEX inx8 ON Media (PoolId);

COMMIT;

UPDATE Version SET VersionId=7;

END-OF-DATA
