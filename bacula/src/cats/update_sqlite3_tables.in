#!/bin/sh
#
# shell script to update SQLite from version 2.0 to 3.0
#
echo " "
echo "This script will update a Bacula SQLite database from version 10 to 11"
echo " which is needed to convert from Bacula version 2.0.x to 3.0.x or higher"
echo "Depending on the size of your database,"
echo "this script may take several minutes to run."
echo " "

bindir=@SQL_BINDIR@
cd @working_dir@
sqlite=@DB_TYPE@
db_name=@db_name@

${bindir}/${sqlite} $* ${db_name}.db <<END-OF-DATA
BEGIN TRANSACTION;

-- Create a table like Job for long term statistics
CREATE TABLE JobHistory (
   JobId INTEGER,
   Job VARCHAR(128) NOT NULL,
   Name VARCHAR(128) NOT NULL,
   Type CHAR NOT NULL,
   Level CHAR NOT NULL,
   ClientId INTEGER REFERENCES Client DEFAULT 0,
   JobStatus CHAR NOT NULL,
   SchedTime DATETIME NOT NULL,
   StartTime DATETIME DEFAULT 0,
   EndTime DATETIME DEFAULT 0,
   RealEndTime DATETIME DEFAULT 0,
   JobTDate BIGINT UNSIGNED DEFAULT 0,
   VolSessionId INTEGER UNSIGNED DEFAULT 0,
   VolSessionTime INTEGER UNSIGNED DEFAULT 0,
   JobFiles INTEGER UNSIGNED DEFAULT 0,
   JobBytes BIGINT UNSIGNED DEFAULT 0,
   JobErrors INTEGER UNSIGNED DEFAULT 0,
   JobMissingFiles INTEGER UNSIGNED DEFAULT 0,
   PoolId INTEGER UNSIGNED REFERENCES Pool DEFAULT 0,
   FileSetId INTEGER UNSIGNED REFERENCES FileSet DEFAULT 0,
   PriorJobId INTEGER UNSIGNED REFERENCES Job DEFAULT 0,
   PurgedFiles TINYINT DEFAULT 0,
   HasBase TINYINT DEFAULT 0,
   PRIMARY KEY(JobId) 
   );
CREATE INDEX inx61 ON JobHistory (Name);

UPDATE Version SET VersionId=11;

COMMIT;

END-OF-DATA
