#
# Bacula Tools Makefile
#
# Version $Id$
#
@MCOMMON@

PYTHON_INC = @PYTHON_INCDIR@

srcdir =	.
VPATH = 	.
.PATH:		.

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/tools

DEBUG=@DEBUG@

first_rule: all
dummy:

#

GETTEXT_LIBS = @LIBINTL@

FINDOBJS = testfind.o ../dird/dird_conf.o ../dird/inc_conf.o ../dird/run_conf.o

# these are the objects that are changed by the .configure process
EXTRAOBJS = @OBJLIST@

DIRCONFOBJS = ../dird/dird_conf.o ../dird/run_conf.o ../dird/inc_conf.o

NODIRTOOLS = bsmtp
DIRTOOLS = bsmtp dbcheck drivetype fstype testfind testls bregex bwild bbatch bregtest
TOOLS = $(@DIR_TOOLS@)

INSNODIRTOOLS = bsmtp
INSDIRTOOLS = bsmtp dbcheck bwild bregex
INSTOOLS = $(INS@DIR_TOOLS@)


.SUFFIXES:	.c .o
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(PYTHON_INC) -I$(srcdir) -I$(basedir) $(DINCLUDE) $(CFLAGS) $<
#-------------------------------------------------------------------------
all: Makefile $(TOOLS) gigaslam grow
	@echo "==== Make of tools is good ===="
	@echo " "

bsmtp:	bsmtp.o ../lib/libbac.a        
	$(CXX) $(LDFLAGS) -L../lib -o $@ bsmtp.o -lbac -lm $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bregtest:	bregtest.o ../lib/libbac.a	  
	$(CXX) $(LDFLAGS) -L../lib -o $@ bregtest.o -lbac -lm $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

dbcheck: dbcheck.o ../lib/libbac.a ../cats/libsql.a $(DIRCONFOBJS)
	$(CXX) $(LDFLAGS) -L../lib -L../cats -o $@ dbcheck.o $(DIRCONFOBJS) -lsql -lbac -lm $(DB_LIBS) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

fstype: fstype.o ../lib/libbac.a ../findlib/libfind.a
	$(CXX) $(LDFLAGS) -L../lib -L../findlib -o $@ fstype.o -lfind -lbac -lm $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

drivetype: drivetype.o ../lib/libbac.a ../findlib/libfind.a
	$(CXX) $(LDFLAGS) -L../lib -L../findlib -o $@ drivetype.o -lfind -lbac -lm $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

dird_conf.o: ../dird/dird_conf.c
	$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(PYTHON_INC) -I$(srcdir) -I$(basedir) $(DINCLUDE) $(CFLAGS) $<

run_conf.o: ../dird/run_conf.c
	$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(PYTHON_INC) -I$(srcdir) -I$(basedir) $(DINCLUDE) $(CFLAGS) $<

inc_conf.o: ../dird/inc_conf.c
	$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(PYTHON_INC) -I$(srcdir) -I$(basedir) $(DINCLUDE) $(CFLAGS) $<

testfind: ../findlib/libfind.a ../lib/libbac.a $(FINDOBJS)
	$(CXX) -g $(LDFLAGS) -o $@ $(FINDOBJS) -L. -L../lib -L../findlib \
	  $(DLIB) -lfind -lbac -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

testls: ../findlib/libfind.a ../lib/libbac.a testls.o
	$(CXX) -g $(LDFLAGS) -L. -L../lib -L../findlib -o $@ testls.o \
	  $(DLIB) -lfind -lbac -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bregex: ../findlib/libfind.a ../lib/libbac.a bregex.o
	$(CXX) -g $(LDFLAGS) -L. -L../lib -o $@ bregex.o \
	  $(DLIB) -lbac -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bwild:	../findlib/libfind.a ../lib/libbac.a bwild.o
	$(CXX) -g $(LDFLAGS) -L. -L../lib -o $@ bwild.o \
	  $(DLIB) -lbac -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bbatch: ../lib/libbac.a bbatch.o
	$(CXX) -g $(LDFLAGS) -L../cats -L. -L../lib -o $@ bbatch.o \
	  -lsql -lbac -lm $(DB_LIBS) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

gigaslam.o: gigaslam.c
	$(CC) -c $<  

gigaslam: gigaslam.o
	$(CC) -o $@ gigaslam.o

grow: grow.o ../lib/libbac.a
	$(CXX) $(LDFLAGS) -L../lib -o $@ grow.o -lbac -lm $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

clean:
	@$(RMF) bsmtp core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3
	@$(RMF) $(DIRTOOLS)

realclean: clean
	@$(RMF) tags

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

# Allow non-root execution of bsmtp for non-root Directors
install: $(INSTOOLS)
	@for tool in ${INSTOOLS} ; do \
	   $(INSTALL_PROGRAM) $$tool $(DESTDIR)$(sbindir)/$$tool ; \
	done
	chmod 755 $(DESTDIR)$(sbindir)/bsmtp

uninstall:
	@for tool in ${INSTOOLS} ; do \
	   $(RMF) $(DESTDIR)$(sbindir)/$$tool ; \
	done



# Semi-automatic generation of dependencies:
# Use gcc -MM because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHO) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(PYTHON_INC) -I$(srcdir) -I$(basedir) $(SQL_INC) *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ===== Something went wrong in make depend ====="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
