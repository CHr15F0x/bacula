#!/bin/sh
#
# Run a backup of the full bacula build directory, but with the
#   Maximum File Size set. Then do a restore of a few files to kick in
#   disk seeking (not yet enabled), and ensure that the restored files
#   match. Even though disk seeking is not yet enabled, this is a good test,
#   and once it is enabled, this will test it.
#
cwd=`pwd`
scripts/copy-test-confs
scripts/cleanup
echo "${cwd}/tmp/build" >/tmp/file-list
rm -rf ${cwd}/tmp/build
mkdir ${cwd}/tmp/build
# Copy only the .c files (to be restored)
cp -p ${cwd}/build/src/dird/*.c ${cwd}/tmp/build
cd ${cwd}/tmp/build
ls >../1
cd ..
sed s%\^%${cwd}/tmp/build/% 1 >restore-list
# At this point restore-list contains the list
#  of files we will restore
rm -f 1
cd ${cwd}
# Now backup *everything* 
rm -rf  ${cwd}/tmp/build
mkdir ${cwd}/tmp/build
cp -fp ${cwd}/build/src/dird/* ${cwd}/tmp/build
# Enable MaximumFileSize
cp ${cwd}/bin/bacula-sd.conf ${cwd}/tmp/1
sed "s%# Maximum File Size%  Maximum File Size%" ${cwd}/tmp/1 >${cwd}/bin/bacula-sd.conf

echo " "
echo " "
echo " === Starting restore-disk-seek-test at `date +%R:%S` ==="
echo " === Starting restore-disk-seek-test at `date +%R:%S` ===" >>working/log
echo " "

bin/bacula start -v -v 2>&1 >/dev/null
#bin/bacula start -v -v 
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA 2>&1 >/dev/null
#bin/bconsole -c bin/bconsole.conf <<END_OF_DATA
@output /dev/null
messages
@output tmp/log1.out
label storage=File volume=TestVolume001
run job=CompressedTest yes
wait
messages
@# 
@# now do a restore
@#
@output tmp/log2.out
sql
select * from JobMedia;

restore bootstrap=${cwd}/tmp/kern.bsr where=${cwd}/tmp/bacula-restores storage=File
7
<${cwd}/tmp/restore-list

yes
wait
messages
@output
quit
END_OF_DATA
scripts/check_for_zombie_jobs storage=File
bin/bacula stop 2>&1 >/dev/null
# Now setup a control directory of only what we *should* restore
rm -rf ${cwd}/tmp/build
mkdir  ${cwd}/tmp/build
cp -p ${cwd}/build/src/dird/*.c ${cwd}/tmp/build
grep "^  Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^  Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
diff -r tmp/build tmp/bacula-restores${cwd}/tmp/build 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! restore-disk-seek-test Bacula source failed!!! !!!!! "
   echo "  !!!!! restore-disk-seek-test failed!!! !!!!! " >>test.out
   if [ $bstat != 0 -o $rstat != 0 ] ; then
      echo "  !!!!! Bad Job termination status     !!!!! "
      echo "  !!!!! Bad Job termination status     !!!!! " >>test.out
   else
      echo "  !!!!! Restored files differ          !!!!! "
      echo "  !!!!! Restored files differ          !!!!! " >>test.out
   fi
   echo " "
else
   echo "  ===== restore-disk-seek-test Bacula source OK ===== "
   echo "  ===== restore-disk-seek-test OK ===== " >>test.out
#  scripts/cleanup
#  rm -rf ${cwd}/tmp/build
fi
