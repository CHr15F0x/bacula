#!/bin/sh
#
# Attempt to backup and restore a file with the delta plugin
#

TestName="delta-test"
JobName=pluginTest
. scripts/functions

scripts/cleanup
scripts/copy-plugin-confs

cat << EOF >> $conf/bacula-dir.conf
FileSet {
 Name = "FS_DELTA"
 Include {
  Options {
    signature=MD5
  }
 Plugin = "delta-test"
 }
}
EOF

$bperl -e 'add_attribute("$conf/bacula-dir.conf", "FileSet", "FS_DELTA", "Job", "pluginTest")'
$bperl -e 'add_attribute("$conf/bacula-dir.conf", "Accurate", "yes", "Job", "pluginTest")'

# install the delta plugin
make -C build/src/plugins/fd install-test-plugin >/dev/null

start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
label storage=File volume=TestVolume001
setdebug level=150 client=$CLIENT
estimate job=$JobName level=Full
setdebug level=50 client=$CLIENT
run job=$JobName yes
wait
status client=$CLIENT
messages
run job=$JobName level=Incremental yes
wait
status client=$CLIENT
run job=$JobName level=Incremental yes
wait
status client=$CLIENT
quit
END_OF_DATA

run_bacula

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
messages
@# 
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
setdebug level=50 client=$CLIENT
restore where=$tmp jobid=1
m *
done
yes
wait
@exec "cp $tmp/delta.txt $tmp/delta.F.txt"
restore where=$tmp jobid=2
m *
done
yes
wait
@exec "cp $tmp/delta.txt $tmp/delta.I1.txt"
restore where=$tmp jobid=3
m *
done
yes
wait
messages
@$out ${cwd}/tmp/log3.out
status client
setdebug level=0 client=$CLIENT
quit
END_OF_DATA

run_bconsole

check_two_logs

stop_bacula

head -c 300 /etc/passwd > $tmp/source
diff -u $tmp/source $tmp/delta.txt > $tmp/d
if [ $? -ne 0 ]; then
    print_debug "ERROR: delta.txt and source are different, restore failed"
    print_debug `cat $tmp/d`
    cat -ev $tmp/delta.*
    dstat=1
fi

end_test
