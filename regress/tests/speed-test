#!/bin/sh
#
# Run a big test with backup of millions of files then run 100 incremental
# modifying 10% each time
#
# Can use following env variables
# ACCURATE=yes
# BASEJOB=yes
# NB_CONCURENT=4

TestName="speed-test"
JobName=speed 
. scripts/functions

${rscripts}/cleanup
${rscripts}/copy-test-confs
echo "${cwd}/files" >${tmp}/file-list
rm -rf ${tmp}/bacula-restores
mkdir -p $cwd/files

change_jobname CompressedTest $JobName
if [ a$ACCURATE != a ]; then
  sed 's/Name = "speed"/Name = "speed"; accurate=yes/' $conf/bacula-dir.conf > $tmp/1
  mv $tmp/1 $conf/bacula-dir.conf
fi

if [ a$BASEJOB != a ]; then
  sed 's/Name = "speed"/Name = "speed"; accurate=yes;basejob=speed/' $conf/bacula-dir.conf > $tmp/1
  mv $tmp/1 $conf/bacula-dir.conf
  basejob="level=base"
fi

export NB_CONCURENT=${NB_CONCURENT:-1}

start_test

# Create X million of files 
echo "Creating 1.5M files"
perl -Mscripts::functions -e "create_many_files('$cwd/files');"

cat <<END_OF_DATA >${tmp}/bconcmds
@$out /dev/null
messages
@$out ${tmp}/log1.out
label storage=File volume=TestVolume001
run job=$JobName $basejob yes
wait
messages
quit
END_OF_DATA

run_bacula
check_for_zombie_jobs storage=File

cat <<END_OF_DATA >${tmp}/bconcmds
@$out /dev/null
messages
@$out ${tmp}/log1.out
END_OF_DATA

for j in $(seq 1 $NB_CONCURENT)
do
    cat <<EOF >>${tmp}/bconcmds
@sleep 5
run job=$JobName level=Full yes
EOF
done

cat <<EOF >>${tmp}/bconcmds
wait
messages
quit
EOF

# insert X million files into File table
for i in $(seq 0 20)
do
    run_bconsole
done

# Now, run many incremental
sed 's/Full/Incremental/' ${tmp}/bconcmds > $tmp/1
mv $tmp/1 ${tmp}/bconcmds

for i in $(seq 0 25)
do
    perl -Mscripts::functions -e "update_some_files('$cwd/files/'.chr($i+65));"
    run_bconsole
done

cat <<END_OF_DATA >${tmp}/bconcmds
@$out /dev/null
messages
@# 
@# now do a restore
@#
@$out ${tmp}/log2.out
time
restore where=${tmp}/bacula-restores storage=File select all done yes
time
wait
time
status storage=File
messages
quit
END_OF_DATA

run_bconsole
check_for_zombie_jobs storage=File
stop_bacula

check_two_logs
#rm -rf ${tmp}/files

find ${tmp}/bacula-restores | wc -l | tee $tmp/bacula-restore-list
rm -rf ${tmp}/bacula-restores

cp working/log files/log${WHICHDB}-$(date +%F_%H-%M).log

end_test
