#!/bin/sh
#
# Create a 60MB file with random bytes. Back it up to 6 Volumes
#   each constrained to 10MB using the automatic labeling feature.
#

if test ! -c /dev/urandom ; then
   echo "No random device. Test skipped.\n"
   exit 0
fi
cwd=`pwd`
scripts/copy-testa-confs
scripts/cleanup
echo "${cwd}/tmp/largefile" >/tmp/file-list
# Create 56MB file with random data
echo "Creating a 56MB file with random data ..."
dd if=/dev/urandom of=${cwd}/tmp/largefile bs=1024 count=55000
echo "largefile created"
bin/bacula stop 2>&1 >/dev/null
bin/drop_sqlite_tables
bin/make_sqlite_tables

echo " "
echo " "
echo " === Starting six-vol-test  ==="
echo " === Starting six-vol-test  ===" >>working/log
echo " "

bin/bacula start 2>&1 >/dev/null
bin/console -c bin/console.conf <<END_OF_DATA
@output /dev/null
messages
@output tmp/log1.out
run job=MultiVol storage=File yes
wait
messages
@# 
@# now do a restore
@#
@output tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select all
yes
wait
messages
@output
quit
END_OF_DATA
bin/bacula stop  2>&1 >/dev/null
grep "^Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
diff tmp/largefile  tmp/bacula-restores${cwd}/tmp/largefile 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! six-vol-test Bacula source failed!!! !!!!! "
   echo "  !!!!! six-vol-test failed!!! !!!!! " >>test.out
   echo " "
else
   echo "  ===== six-vol-test Bacula source OK ===== "
   echo "  ===== six-vol-test OK ===== " >>test.out
   scripts/cleanup
fi
