#!/bin/sh
#
# Run two jobs at the same time
#
cwd=`pwd`
scripts/copy-tape-confs
scripts/cleanup-tape

echo "${cwd}/build" >/tmp/file-list

echo " "
echo " "
echo " === Starting four-concurrent-jobs-tape at `date +%R:%S` ==="
echo " === Starting four-concurrent-jobs-tape at `date +%R:%S` ===" >>working/log
echo " "

bin/bacula start 2>&1 >/dev/null
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA 2>&1 >/dev/null
@output /dev/null
messages
@output tmp/log1.out
label storage=DDS-4 volume=TestVolume001 slot=0
run job=NightlySave level=Full Storage=DDS-4 yes
run job=NightlySave level=Full Storage=DDS-4 yes
run job=NightlySave level=Full Storage=DDS-4 yes
run job=NightlySave level=Full Storage=DDS-4 yes
@sleep 2
status dir
@sleep 5
messages
wait
messages
@# 
@# now do a restore
@#
@output tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select storage=DDS-4
unmark *
mark *
done
yes
wait
messages
@output
quit
END_OF_DATA
scripts/check_for_zombie_jobs storage=DDS-4
bin/bacula stop 2>&1 >/dev/null
grep "^  Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^  Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
diff -r build tmp/bacula-restores${cwd}/build 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! four-concurrent-jobs-tape Bacula source failed!!! !!!!! "
   echo "  !!!!! four-concurrent-jobs-tape failed!!! !!!!! " >>test.out
   echo " "
   exit 1
else
   echo "  ===== four-concurrent-jobs-tape Bacula source OK ===== "
   echo "  ===== four-concurrent-jobs-tape OK ===== " >>test.out
   scripts/cleanup
   exit 0
fi
