#!/bin/sh
#
# Run four jobs at the same time, with two Volumes.
#   Set max Vol bytes of first volume
#   to less than total backup to force Bacula to use the second
#   Volume.
#
TestName="multi-client-test"
JobName=Multi-client
. scripts/functions

scripts/cleanup
scripts/copy-test-confs
/bin/cp -f scripts/multi-client-bacula-dir.conf bin/bacula-dir.conf

change_jobname NightlySave $JobName
start_test

cat <<END_OF_DATA >tmp/bconcmds
@output /dev/null
messages
@$out   tmp/log1.out
@# Make sure we can contact all clients
setdebug level=100 dir
status client=${HOST}-fd
status client=${hostname1}-fd
status client=${hostname2}-fd
status client=${hostname3}-fd
setdebug level=1 dir
label storage=File1
TestVolume001
label storage=File1
TestVolume002
update Volume=TestVolume001 MaxVolBytes=200000000
@#50000000
@#12
@#setdebug level=51 Storage=File1
status storage=File1
llist volume=TestVolume001
llist volume=TestVolume002
run job=${hostname1} level=Full Storage=File1
yes
llist volume=TestVolume001
llist volume=TestVolume002
run job=${hostname2} level=Full Storage=File1
yes
reload
llist volume=TestVolume001
llist volume=TestVolume002
run job=${hostname3} level=Full Storage=File1
yes
llist volume=TestVolume001
llist volume=TestVolume002
status storage=File1
run job=$JobName level=Full Storage=File1
yes
status storage=File1
@sleep 2
status dir
status storage=File1
llist volume=TestVolume001
llist volume=TestVolume002
@sleep 5
messages
wait
status storage=File1
messages
@# 
@# now do a restore
@#
@$out   tmp/log2.out
restore where=${cwd}/tmp/bacula-restores client=${hostname}-fd select storage=File1
unmark *
mark *
done
yes
wait
reload
reload
messages
@output
quit
END_OF_DATA

run_bacula
check_for_zombie_jobs storage=File1
stop_bacula

check_two_logs
check_restore_diff
end_test
