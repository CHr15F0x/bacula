#!/bin/sh
#
# Run a simple backup of the Bacula build directory 
#  to two tapes where the maximum tape file size is set to 1M
#  Note, this test simulates the tape filling and writing to
#   the next tape. One minor wrinkle: we create the two tapes
#   in the Scratch pool, so they should be switched to the Default
#   Pool automatically.
#
#  Note we use the viritual disk autochanger
#
debug=0
. config.out
if test x${AUTOCHANGER} = x/dev/null ; then
   echo "two-volume-test skipped. No autochanger."
   exit
fi
if test "$debug" -eq 1 ; then
  out="tee"
else
  out="output"
fi
cwd=`pwd`
scripts/cleanup
scripts/copy-2disk-confs
scripts/prepare-two-disks
 
echo "${cwd}/build" >/tmp/file-list

outf="tmp/sed_tmp"
echo "s%# Maximum File Size%  Maximum File Size%g" >${outf}
cp ${cwd}/bin/bacula-sd.conf ${cwd}/tmp/1
sed -f ${outf} ${cwd}/tmp/1 >${cwd}/bin/bacula-sd.conf

echo " "
echo " "
echo " === Starting Scratch Pool Test at `date +%R:%S` ==="
echo " === Starting Scratch Pool Test at `date +%R:%S` ===" >>working/log
echo " "
# Write out bconsole commands
cat <<END_OF_DATA >tmp/bconcmds
@$out /dev/null
messages
@$out tmp/log1.out
label storage=DDS-4 volume=TestVolume001 slot=1 pool=Scratch drive=0
label storage=DDS-4 volume=TestVolume002 slot=2 pool=Scratch drive=0
update Volume=TestVolume001 MaxVolBytes=3000000 pool=Scratch drive=0
update Volume=TestVolume001 inchanger=no pool=Scratch drive=0
@#setdebug level=200 storage=DDS-4
llist volume=TestVolume001
run job=NightlySave yes
wait
messages
list volumes
llist volume=TestVolume001
@# 
@# now do a restore
@#
@$out tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select all storage=DDS-4 done
yes
wait
messages
@$out
quit
END_OF_DATA

if test "$debug" -eq 1 ; then
  bin/bacula start
  cat tmp/bconcmds | bin/bconsole -c bin/bconsole.conf
else
  bin/bacula start 2>&1 >/dev/null
  cat tmp/bconcmds | bin/bconsole -c bin/bconsole.conf  2>&1 >/dev/null
fi
scripts/check_for_zombie_jobs storage=DDS-4

bin/bacula stop 2>&1 >/dev/null
grep "^  Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^  Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
diff -r build tmp/bacula-restores${cwd}/build 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! Scratch Pool Test Bacula source failed!!! !!!!! "
   echo "  !!!!! Scratch Pool Test failed!!! !!!!! " >>test.out
   echo " "
else
   echo "  ===== Scratch Pool Test Bacula source OK `date +%R:%S` ===== "
   echo "  ===== Scratch Pool Test OK `date +%R:%S` ===== " >>test.out
   scripts/cleanup
fi
