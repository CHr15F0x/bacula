#!/bin/sh
#
# Run a simple backup of the Bacula build directory but 
#   split the archive into four volumes, two of which are
#   totally full. I.e. make sure that bsr selects all tapes 
#   including those fully spanned.
#
cwd=`pwd`
scripts/copy-test-confs
scripts/cleanup
echo "${cwd}/build" >/tmp/file-list
bin/bacula stop 2>&1 >/dev/null
cd bin
./drop_bacula_tables >/dev/null 2>&1
./make_bacula_tables >/dev/null 2>&1
./grant_bacula_privileges 2>&1 >/dev/null
cd ..

echo " "
echo " "
echo " === Starting span-vol-test  ==="
echo " === Starting span-vol-test  ===" >working/log
echo " "

bin/bacula start 2>&1 >/dev/null
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA
@output /dev/null
messages
@output tmp/log1.out
label storage=File1 volume=TestVolume001
label storage=File1 volume=TestVolume002
label storage=File1 volume=TestVolume003
label storage=File1 volume=TestVolume004
update Volume=TestVolume001 MaxVolBytes=3000000
update Volume=TestVolume002 MaxVolBytes=3000000
update Volume=TestVolume003 MaxVolBytes=3000000
run job=NightlySave storage=File1 yes
wait
list volumes
messages
@# 
@# now do a restore
@#
@output tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select storage=File1
unmark *
mark *
done
yes
wait
messages
@output
quit
END_OF_DATA
scripts/check_for_zombie_jobs storage=File1
bin/bacula stop 2>&1 >/dev/null
grep "^Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
diff -r build  tmp/bacula-restores${cwd}/build 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! span-vol-test Bacula source failed!!! !!!!! "
   echo "  !!!!! span-vol-test failed!!! !!!!! " >>test.out
   echo " "
else
   echo "  ===== span-vol-test Bacula source OK ===== "
   echo "  ===== span-vol-test OK ===== " >>test.out
   scripts/cleanup
fi
