#!/bin/sh
#
# Run a simple backup of the Bacula build directory
#   then restore it.
#
MUID=`/usr/bin/id -u`
if [ $MUID != 0 ] ; then
   echo " "
   echo "You must be root to run this test."
   echo "  ===== dev test failed!!! ===== "
   echo "  ===== dev test failed!!! ===== " >>test.out
   echo " "
   exit 1
fi
cwd=`pwd`
scripts/copy-test-confs
scripts/cleanup
echo "/dev" >/tmp/file-list
bin/bacula stop 2>&1 >/dev/null
bin/drop_sqlite_tables
bin/make_sqlite_tables
echo " "
echo " "
echo " === Starting /dev save/restore test ==="
echo " "
echo " "
bin/bacula start 2>&1 >/dev/null
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA
@output /dev/null
messages
@output tmp/log1.out
label storage=File
TestVolume001
run job=NightlySave
yes
wait
messages
@# 
@# now do a restore
@#
@output tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select all
yes
wait
messages
@output
quit
END_OF_DATA
bin/bacula stop 2>&1 >/dev/null
cd /
${cwd}/bin/testls -e ${cwd}/scripts/exclude-etc-test dev >${cwd}/tmp/original
cd ${cwd}/tmp/bacula-restores
${cwd}/bin/testls -e ${cwd}/scripts/exclude-etc-test dev >${cwd}/tmp/restored
cd ${cwd}/tmp
cat >sed.scr <<END_OF_DATA
s%.*dev$%dev%
s%.*[0-9][0-9]:[0-9][0-9]:[0-9][0-9] dev/ptmx%dev/ptmx%
s%.*[0-9][0-9]:[0-9][0-9]:[0-9][0-9] dev/ttyp1%dev/ttyp1%
s%.*[0-9][0-9]:[0-9][0-9]:[0-9][0-9] dev/null%dev/null%
END_OF_DATA
sed -f sed.scr original | sort >original
#
sed -f sed.scr restored | sort >restored
rm -f sed.scr
#
cd ${cwd}
diff tmp/original tmp/restored 2>&1 1>/dev/null 2>&1 1>/dev/null
if [ $? != 0 ] ; then
   echo " "
   echo " "
   echo "  ===== dev test failed!!! ===== "
   echo "  ===== dev test failed!!! ===== " >>test.out
   echo " "
else
   echo "  ===== dev test OK ===== "
   echo "  ===== dev test OK ===== " >>test.out
   scripts/cleanup
fi
