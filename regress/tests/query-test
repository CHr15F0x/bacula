#!/bin/sh
#
# Run a simple backup of the Bacula build directory then create some           
#   new files, do a Decremental then a bunch of query commands
#   and finally restore the two files.
#
cwd=`pwd`
scripts/copy-test-confs
scripts/cleanup
echo "${cwd}/tmp/build" >/tmp/file-list
mkdir ${cwd}/tmp/build
cp -p ${cwd}/build/src/dird/*.c ${cwd}/tmp/build
cd ${cwd}/tmp
echo "${cwd}/tmp/build/ficheriro1.txt" >restore-list
echo "${cwd}/tmp/build/ficheriro2.txt" >>restore-list
cd ${cwd}

echo " "
echo " "
echo " === Starting query-test at `date +%R:%S` ==="
echo " === Starting query-test at `date +%R:%S` ===" >>working/log
echo " "

bin/bacula start 2>&1 >/dev/null
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA 2>&1 >/dev/null
@output /dev/null
messages
@output tmp/log1.out
label storage=File volume=TestVolume001
label storage=File volume=TestVolume002
run job=CompressedTest yes
wait
messages
quit
END_OF_DATA
scripts/check_for_zombie_jobs storage=File
echo "ficheriro1.txt" >${cwd}/tmp/build/ficheriro1.txt
echo "ficheriro2.txt" >${cwd}/tmp/build/ficheriro2.txt
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA 2>&1 >/dev/null
@output /dev/null
messages
@output tmp/log1.out
@# Force decremental on the second Volume
update volume=TestVolume001 VolStatus=Used
run level=decremental job=CompressedTest yes
wait
messages
@output
END_OF_DATA
scripts/check_for_zombie_jobs storage=File
echo "ficheriro2.txt" >${cwd}/tmp/build/ficheriro2.txt
bin/bconsole -c bin/bconsole.conf <<END_OF_DATA 2>&1 >/dev/null
@output /dev/null
messages
@output tmp/log1.out
run level=incremental job=CompressedTest yes
wait
messages
@#
@# Now do the queries
@#
query
1
query
2
ficheriro1.txt
query
3
${cwd}/tmp/build/
ficheriro1.txt
Client1
query
7
TestVolume001
query
8
1
query
9
Client1
query
10
Default
query
11
query
12
query
13
1
@# 
@# now do a restore
@#
@output tmp/log2.out
restore where=${cwd}/tmp/bacula-restores storage=File file=<${cwd}/tmp/restore-list
yes
wait
messages
@output
quit
END_OF_DATA
scripts/check_for_zombie_jobs storage=File
bin/bacula stop 2>&1 >/dev/null
grep "^  Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
grep "^  Termination: *Restore OK" tmp/log2.out 2>&1 >/dev/null
rstat=$?
#
# Delete .c files because we will only restored the txt files
#
rm -f tmp/build/*.c
diff -r tmp/build tmp/bacula-restores${cwd}/tmp/build 2>&1 >/dev/null
if [ $? != 0 -o $bstat != 0 -o $rstat != 0 ] ; then
   echo " "
   echo " "
   echo "  !!!!! query-test Bacula source failed!!! !!!!! "
   echo "  !!!!! query-test failed!!! !!!!! " >>test.out
   if [ $bstat != 0 -o $rstat != 0 ] ; then
      echo "  !!!!! Bad Job termination status     !!!!! "
      echo "  !!!!! Bad Job termination status     !!!!! " >>test.out
   else
      echo "  !!!!! Restored files differ          !!!!! "
      echo "  !!!!! Restored files differ          !!!!! " >>test.out
   fi
   echo " "
else
   echo "  ===== query-test Bacula source OK `date +%R:%S` ===== "
   echo "  ===== query-test OK `date +%R:%S` ===== " >>test.out
   scripts/cleanup
fi
