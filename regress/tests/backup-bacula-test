#!/bin/sh
#
# Run a simple backup of the Bacula build directory
#   then restore it.
#
TestName="backup-bacula-test"
JobName=backup
. scripts/functions

scripts/cleanup
scripts/copy-confs

change_jobname Client1 $JobName
start_test

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@output /dev/null
messages
@$out ${cwd}/tmp/log1.out
label volume=TestVolume001 storage=File pool=Default
@#setdebug level=100 storage=File
run job=$JobName yes
status storage=File
status storage=File
status storage=File
status storage=File
status storage=File
status storage=File
@sleep 1
status storage=File
status storage=File
status storage=File
status storage=File
status storage=File
@sleep 1
status storage=File
status storage=File
status storage=File
status storage=File
status storage=File
wait
messages
@# 
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out  
restore where=${cwd}/tmp/bacula-restores select all done
yes
wait
messages
@$out
quit
END_OF_DATA

run_bacula
check_for_zombie_jobs storage=File
stop_bacula

cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@output /dev/null
messages
@$out ${cwd}/tmp/log1.out
@#setdebug level=100 storage=File
run job=$JobName yes
wait
messages
@# 
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out  
restore where=${cwd}/tmp/bacula-restores select all done
yes
wait
messages
@$out
quit
END_OF_DATA

#
# Now do a second backup after making a few changes
#
touch ${cwd}/build/src/dird/*.c
echo "test test" > ${cwd}/build/src/dird/xxx
#

run_bacula
check_for_zombie_jobs storage=File
stop_bacula

check_two_logs
check_restore_diff
end_test
