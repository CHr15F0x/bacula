#!/bin/sh
#
# Run a simple backup of the Bacula build directory but 
#   split the archive into two volumes, then build a BSR with
#   the restore command and use bextract to restore the files.
#
TestName="bextract-test"
JobName="bextract"
. scripts/functions
set_debug 0

scripts/cleanup
scripts/copy-test-confs
echo "${cwd}/build" >/tmp/file-list

change_jobname NightlySave $JobName 
start_test

cat <<END_OF_DATA >tmp/bconcmds
@output /dev/null
messages
@$out tmp/log1.out
label storage=File1 volume=TestVolume001
label storage=File1 volume=TestVolume002
update Volume=TestVolume001 MaxVolBytes=3000000
@#setdebug level=400 dir
@#setdebug level=400 storage=File1
run job=$JobName storage=File1 yes
wait
messages
@# 
@# now build the bsr file
@#
@$out tmp/log2.out
restore bootstrap=${cwd}/working/restore.bsr where=${cwd}/tmp/bacula-restores select all storage=File1 done
no
wait
messages
@$out
quit
END_OF_DATA

run_bacula
check_for_zombie_jobs storage=File1
stop_bacula

mkdir -p ${cwd}/tmp/bacula-restores
bin/bextract -b working/restore.bsr -c bin/bacula-sd.conf ${cwd}/tmp ${cwd}/tmp/bacula-restores 2>&1 >/dev/null
rstat=$?
grep "^  Termination: *Backup OK" tmp/log1.out 2>&1 >/dev/null
bstat=$?
check_restore_diff
end_test
