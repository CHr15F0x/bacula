#
# Makefile for Bacula regression testing
#
#  Note, Makefile is built from Makefile.in, which you should not really 
#    need to change, by envoking:
#
#  ./config <user's configuration>
# e.g.
#
#  ./config kern.conf
#
#

# suck in user's configuration
@CONFIG@

first_rule: all

all:

setup: bacula

# 
# Some machines cannot handle the sticky bit and other garbage that
#  is in weird-files, so we load and run it only on Linux machines.
#
bacula: all sed
	@rm -rf bin build weird-files tmp
	(if test x`uname` = xLinux -o x`uname` = xFreeBSD ; then \
	   tar xfz weird-files.tar.gz ;\
	 fi)
	rm -rf tmp working
	mkdir tmp working
	scripts/setup ${BACULA_SOURCE} ${EMAIL} ${WHICHDB} ${TCPWRAPPERS}

sed:
	scripts/do_sed ${EMAIL} ${TAPE_DRIVE} ${AUTOCHANGER} ${AUTOCHANGER_PATH}

# Run all non-root userid tests
test: 
	./all-non-root-tests

# run all file and tape tests
full_test:
	./all-tape-and-file-tests

# These tests require you to run as root
root_test:
	./all-root-tests

clean:
	scripts/cleanup
	rm -f /tmp/file-list
	rm -f tmp/* working/*
	rm -f test.out
	rm -f diff
	rm -f 1 2 3 scripts/1 scripts/2 scripts/3 tests/1 tests/2 tests/3
	@find . -name .#* -exec $(RMF) {} \;

# Reset our userid after running as root
reset:
	chown -R ${USER}:${USER} . tmp working
	scripts/cleanup
	rm -f /tmp/file-list tmp/file-list
	rm -f tmp/* working/*

distclean: clean
	rm -rf bin build weird-files weird-files weird-files2 tmp working
	rm -f scripts/*.conf
		      
